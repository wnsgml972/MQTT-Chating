package kr.ac.hansung.panel;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.TextField;

import javax.swing.*;

class InputPanel extends JPanel {
	
	private JTextField textField;
	
	@Override
	public void paintComponent(Graphics g) {
		g.setColor(Color.yellow);
		g.setFont(new Font("아이럽우유", Font.ITALIC, 25));
	}

	public InputPanel() {
		setLayout(null);
		this.setPreferredSize(new Dimension(1100, 60));

		textField.setHorizontalAlignment(JTextField.CENTER);
		textField.setForeground(Color.white);
		textField.setOpaque(false);
		textField.setFont(new Font("아이럽우유", Font.ITALIC, 20));
		textField.setBounds(380, 0, 300, 40);

		add(textField);

		// 키보드입력
		textField.addKeyListener(new KeyAdapter() {
			public void keyPressed(KeyEvent e) {
				if (e.getKeyCode() == KeyEvent.VK_ESCAPE)// 입력한게 esc키이면
				{
					if (runControl == GlobalNum.START)// 기본1에서 esc눌르면 2로변환
					{
						runControl = GlobalNum.STOP;
					} else if (runControl == GlobalNum.STOP)// 2에서는 1로변환
					// 일시정지 해제
					{
						runControl = GlobalNum.START;
					}
					// esc눌렀을때 다시 칠해라
					tb.repaint();
				}
				if (e.getKeyCode() == KeyEvent.VK_ENTER) // 엔터누르면
				{
					JTextField textfield = (JTextField) e.getSource();
					String text = textfield.getText();
					Vector<JLabel> sameLabel = new Vector<JLabel>();
					Vector<Integer> sameLabelIndex = new Vector<Integer>();
					textfield.setText("");// 필드 비움
					for (int i = 0; i < threadVector.size(); i++) {
						JLabel la = threadVector.get(i).getTextLabel();
						if (text.equals(la.getText())) {
							sameLabelIndex.add(i);
							sameLabel.add(la);
						}

					}
					if (sameLabel.size() != 0)// 값이들어 있으면
					{
						JLabel maxLabel = sameLabel.get(0);
						int maxLabelIndex = sameLabelIndex.get(0);
						if (sameLabel.size() > 1) // 같은 단어가 두개 이상 있으면
						// 가장아래있는단어 찾기
						{
							for (int i = 1; i < sameLabel.size(); i++) {
								JLabel la = sameLabel.get(i);
								if (maxLabel.getLocation().y < la.getLocation().y) {
									maxLabel = la;
									maxLabelIndex = sameLabelIndex.get(i);
								}

							}
						}

						WordDownThread maxLabelThread = threadVector.get(maxLabelIndex); // 입력받은

						Color labelForeColor = maxLabel.getForeground();
						ItemThread itemThread = new ItemThread(maxLabelThread);
						if (labelForeColor == Color.yellow) {
							itemThread.setMissileAll();
							score = score + 50 + (gameLevel * 10);
						} else if (labelForeColor == Color.orange) {
							itemThread.setItem(GlobalNum.TWO_SECOND_STOP);
						} else if (labelForeColor == Color.magenta) {
							heartNum++;
							if (heartNum > 10)
								heartNum = 10;
						}
						itemThread.start();
						score += (100 + text.length() * 10) + (gameLevel * 50);
						groundPanel.repaint();
						repaint();
					}
				}
			}
		});
	}
}